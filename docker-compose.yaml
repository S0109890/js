version: '3'
services:
  # database build
  database:
    container_name: photo_db
    # 빌드될 dockerfile 위치
    build:
      context: ./database
    # 만들어질 이미지파일 이름
    image: photo_db
    # 연결될 DB 환경설정 값
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=meta_ai
    volumes:
      - ./database/db:/var/lib/postgresql/data
      # - ./database/db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
    ports:
      - "5435:5432"
    restart: always
  
  # backend build
  backend:
    container_name: book_backend
    depends_on:
      - database
    build: 
      context: ./backend
    image: book_backend
    volumes:
      - ./backend:/usr/src/app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - LOGGER_LEVEL=debug
      - DB_HOST=database
      - DB_PORT=5432
      - DB_DATABASE=meta_ai
      - DB_ID=postgres
      - DB_PASS=postgres
      - DB_DIALECT=postgres
    restart: always
    command: "npm start"

  # # frontend build
  # frontend:
  #   container_name: book_frontend
  #   depends_on:
  #     - backend
  #   build: ./frontend/bookscanner-frontend
  #   image: book_frontend
  #   volumes:
  #     - ./frontend/bookscanner-frontend:/app
  #   ports:
  #     - "8080:8080"
  #   restart: always

# # MQTT server build
  mqtt:
    image: eclipse-mosquitto
    hostname: mosquitto
    restart: always
    ports:
      - "1883:1883"
      - "8088:8088"
    volumes: 
      - ./mqtt-simulator-main/mqtt/config/mqtt/config:/mosquitto/config
    tty: true
    stdin_open: true
    networks:
      - webnet
networks: 
  webnet: 
